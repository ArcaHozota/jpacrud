/*
 * This file is generated by jOOQ.
 */
package jp.co.toshiba.ppok.jooq.tables.records;


import jp.co.toshiba.ppok.jooq.tables.CityInfo;

import org.jooq.Field;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CityInfoRecord extends TableRecordImpl<CityInfoRecord> implements Record7<Integer, String, String, String, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.city_info.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.city_info.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.city_info.continent</code>.
     */
    public void setContinent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.city_info.continent</code>.
     */
    public String getContinent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.city_info.nation</code>.
     */
    public void setNation(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.city_info.nation</code>.
     */
    public String getNation() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.city_info.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.city_info.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.city_info.district</code>.
     */
    public void setDistrict(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.city_info.district</code>.
     */
    public String getDistrict() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.city_info.population</code>.
     */
    public void setPopulation(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.city_info.population</code>.
     */
    public Integer getPopulation() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.city_info.language</code>.
     */
    public void setLanguage(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.city_info.language</code>.
     */
    public String getLanguage() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, String, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, String, String, Integer, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CityInfo.CITY_INFO.ID;
    }

    @Override
    public Field<String> field2() {
        return CityInfo.CITY_INFO.CONTINENT;
    }

    @Override
    public Field<String> field3() {
        return CityInfo.CITY_INFO.NATION;
    }

    @Override
    public Field<String> field4() {
        return CityInfo.CITY_INFO.NAME;
    }

    @Override
    public Field<String> field5() {
        return CityInfo.CITY_INFO.DISTRICT;
    }

    @Override
    public Field<Integer> field6() {
        return CityInfo.CITY_INFO.POPULATION;
    }

    @Override
    public Field<String> field7() {
        return CityInfo.CITY_INFO.LANGUAGE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContinent();
    }

    @Override
    public String component3() {
        return getNation();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getDistrict();
    }

    @Override
    public Integer component6() {
        return getPopulation();
    }

    @Override
    public String component7() {
        return getLanguage();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContinent();
    }

    @Override
    public String value3() {
        return getNation();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getDistrict();
    }

    @Override
    public Integer value6() {
        return getPopulation();
    }

    @Override
    public String value7() {
        return getLanguage();
    }

    @Override
    public CityInfoRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CityInfoRecord value2(String value) {
        setContinent(value);
        return this;
    }

    @Override
    public CityInfoRecord value3(String value) {
        setNation(value);
        return this;
    }

    @Override
    public CityInfoRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public CityInfoRecord value5(String value) {
        setDistrict(value);
        return this;
    }

    @Override
    public CityInfoRecord value6(Integer value) {
        setPopulation(value);
        return this;
    }

    @Override
    public CityInfoRecord value7(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public CityInfoRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CityInfoRecord
     */
    public CityInfoRecord() {
        super(CityInfo.CITY_INFO);
    }

    /**
     * Create a detached, initialised CityInfoRecord
     */
    public CityInfoRecord(Integer id, String continent, String nation, String name, String district, Integer population, String language) {
        super(CityInfo.CITY_INFO);

        setId(id);
        setContinent(continent);
        setNation(nation);
        setName(name);
        setDistrict(district);
        setPopulation(population);
        setLanguage(language);
        resetChangedOnNotNull();
    }
}
